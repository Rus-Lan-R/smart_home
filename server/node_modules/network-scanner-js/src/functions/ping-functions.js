import ping from 'ping'
import {getRange} from './functions'

export const pingFunc = async(host, config) => {
  if(!config){
    config = {
      repeat:1,
      size:32,
      timeout:1
    }
  }
  if(!config.repeat){
    config.repeat = 1
  }
  if(!config.size){
    config.size = 32
  }
  if(!config.timeout){
    config.timeout = 1
  }
  if(!host){
    throw new Error('Host cannot be null')
  }
  try{
    let p = await ping.promise.probe(host, {min_reply:config.repeat, packetSize:config.size, timeout:config.timeout})
    const status = p.alive == true ? ('online'):('offline')
    return {
      host:host,
      ip_address:p.numeric_host,
      status:status,
      res_avg:`${p.avg}ms`,
      times:p.times,
      packet_loss:p.packetLoss,
      log:p.output
    }
  }catch(err){
    return new Error(err)
  }
}

export const clusterPingFunc = async(array, cb) => {
  var new_arr = []
  await Promise.all(array.map(async (a) => {
    try{
      const each_node = await pingFunc(a)
      new_arr.push(each_node)
    }catch(err){
      throw err
    }
  }))
  cb(new_arr)
}

export const ipScanFunc = async(range, cb) => {
  const arr = getRange(range)
  await Promise.all(arr.map(async (a) => {
    try{
      const each_node = await pingFunc(a)
      each_node.status === 'online' ? (cb(each_node)):(null)
    }catch(err){
      throw err
    }
  }))
}
