{"ast":null,"code":"var _jsxFileName = \"/home/ruslan/final_project/smart_home/client/src/components/DeviceConnection/AddDevice/AddDeviceCard/AddDeviceCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport * as apiRpiEndPoinst from \"../../../../config/apiRpiEndPoinst\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\nexport default function AddDeviceCard() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    deviceID\n  } = useParams();\n  const currentDevice = useSelector(state => state.scanningIP[deviceID]);\n  const [port, setPort] = useState(\"\");\n\n  const connect = async (ip, port) => {\n    const responseConnect = await fetch(apiRpiEndPoinst.connectDevice(), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ip,\n        port\n      })\n    });\n    console.log(responseConnect.ok);\n  };\n\n  useEffect(() => {\n    fetch(apiRpiEndPoinst.getPorts(), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ip: currentDevice.ip\n      })\n    }).then(response => response.json()).then(ports => setPort(ports));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    width: \"50%\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: currentDevice.vendor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: currentDevice.ip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: currentDevice.mac\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          children: \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AddDeviceCard, \"d1jtvZhobpxHmyhCp6sL966UyDE=\", true, function () {\n  return [useStyles, useSelector];\n});\n\n_c = AddDeviceCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDeviceCard\");","map":{"version":3,"sources":["/home/ruslan/final_project/smart_home/client/src/components/DeviceConnection/AddDevice/AddDeviceCard/AddDeviceCard.jsx"],"names":["React","useEffect","useState","useSelector","makeStyles","Card","CardActions","CardContent","Button","Typography","Container","apiRpiEndPoinst","useStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","AddDeviceCard","classes","deviceID","useParams","currentDevice","state","scanningIP","port","setPort","connect","ip","responseConnect","fetch","connectDevice","method","headers","body","JSON","stringify","console","log","ok","getPorts","then","response","json","ports","vendor","mac"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport * as apiRpiEndPoinst from \"../../../../config/apiRpiEndPoinst\";\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tminWidth: 275,\n\t},\n\tbullet: {\n\t\tdisplay: \"inline-block\",\n\t\tmargin: \"0 2px\",\n\t\ttransform: \"scale(0.8)\",\n\t},\n\ttitle: {\n\t\tfontSize: 14,\n\t},\n\tpos: {\n\t\tmarginBottom: 12,\n\t},\n});\n\nexport default function AddDeviceCard() {\n\tconst classes = useStyles();\n\n\tconst { deviceID } = useParams();\n\tconst currentDevice = useSelector((state) => state.scanningIP[deviceID]);\n\n\tconst [port, setPort] = useState(\"\");\n\n\tconst connect = async (ip, port) => {\n\t\tconst responseConnect = await fetch(apiRpiEndPoinst.connectDevice(), {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({ ip, port }),\n\t\t});\n\n\t\tconsole.log(responseConnect.ok);\n\t};\n\n\tuseEffect(() => {\n\t\tfetch(apiRpiEndPoinst.getPorts(), {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({ ip: currentDevice.ip }),\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((ports) => setPort(ports));\n\t}, []);\n\n\treturn (\n\t\t<Container width=\"50%\">\n\t\t\t<Card className={classes.root}>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t{currentDevice.vendor}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n\t\t\t\t\t\t{currentDevice.ip}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n\t\t\t\t\t\t{currentDevice.mac}\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t\t<CardActions>\n\t\t\t\t\t<Button size=\"small\">Connect</Button>\n\t\t\t\t</CardActions>\n\t\t\t</Card>\n\t\t</Container>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}