{"ast":null,"code":"var _jsxFileName = \"/home/ruslan/final_project/smart_home/client/src/context/currentDeviceIpContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentDeviceIpContext = /*#__PURE__*/createContext();\nexport const CurrentDeviceIpContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    deviceIP,\n    setDeviceIP\n  } = useState({});\n  return /*#__PURE__*/_jsxDEV(currentDeviceIpContext.Provider, {\n    value: {\n      deviceIP,\n      setDeviceIP\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CurrentDeviceIpContextProvider, \"SfhlZqI6bJ9OCkE4HQqCJ+Opfaw=\");\n\n_c = CurrentDeviceIpContextProvider;\nexport const useCurrentDeviceIpContext = () => {\n  _s2();\n\n  return useContext(currentDeviceIpContext);\n};\n\n_s2(useCurrentDeviceIpContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentDeviceIpContextProvider\");","map":{"version":3,"sources":["/home/ruslan/final_project/smart_home/client/src/context/currentDeviceIpContext.jsx"],"names":["createContext","useContext","useState","currentDeviceIpContext","CurrentDeviceIpContextProvider","children","deviceIP","setDeviceIP","useCurrentDeviceIpContext"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;;AAEA,MAAMC,sBAAsB,gBAAGH,aAAa,EAA5C;AAEA,OAAO,MAAMI,8BAA8B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC/D,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,sBACC,QAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAE;AAAEI,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAxC;AAAA,cACEF;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAPM;;GAAMD,8B;;KAAAA,8B;AASb,OAAO,MAAMI,yBAAyB,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,sBAAD,CAAhB;AAAA,CAAlC;;IAAMK,yB","sourcesContent":["import { createContext, useContext, useState } from \"react\";\n\nconst currentDeviceIpContext = createContext();\n\nexport const CurrentDeviceIpContextProvider = ({ children }) => {\n\tconst { deviceIP, setDeviceIP } = useState({});\n\treturn (\n\t\t<currentDeviceIpContext.Provider value={{ deviceIP, setDeviceIP }}>\n\t\t\t{children}\n\t\t</currentDeviceIpContext.Provider>\n\t);\n};\n\nexport const useCurrentDeviceIpContext = () => useContext(currentDeviceIpContext);\n"]},"metadata":{},"sourceType":"module"}