{"ast":null,"code":"import { DELETE_USER, SET_USER } from \"../types/userTypes\";\nimport * as authEndPoints from \"../../config/authEndPoints\"; // export const getUserFromServer = (id) => async (dispatch) => {\n// \tconst response = await fetch(authEndPoints.getUser(id), { credentials: \"include\" });\n// \tif (response.status === 200) {\n// \t\tconst currentUser = await response.json();\n// \t\tdispatch(setUser(currentUser));\n// \t}\n// };\n\nexport const setUser = user => ({\n  type: SET_USER,\n  payload: user\n});\nexport const signUp = (payload, history) => async dispatch => {\n  const response = await fetch(authEndPoints.signUp(), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\",\n    body: JSON.stringify(payload)\n  });\n\n  if (response.status === 200) {\n    const user = await response.json();\n    console.log(user);\n    dispatch(setUser(user)); // history.replace(\"/\");\n  } else {// history.replace(\"/signup\");\n    }\n};\nexport const signIn = (payload, history, from) => async dispatch => {\n  const response = await fetch(authEndPoints.signIn(), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\",\n    body: JSON.stringify(payload)\n  });\n\n  if (response.status === 200) {\n    const user = await response.json();\n    console.log(user);\n    dispatch(setUser(user));\n    history.replace(from);\n  } else {\n    history.replace(\"/signin\");\n  }\n};\nexport const signOut = () => async dispatch => {\n  console.log(\"out\");\n  const response = await fetch(authEndPoints.signOut(), {\n    credentials: \"include\"\n  });\n\n  if (response.status === 200) {\n    dispatch(deleteUser());\n  }\n};\nexport const checkAuth = () => async dispatch => {\n  const response = await fetch(authEndPoints.checkAuth(), {\n    credentials: \"include\"\n  });\n\n  if (response.status === 200) {\n    const user = await response.json();\n    dispatch(setUser(user));\n  }\n};\nexport const deleteUser = () => ({\n  type: DELETE_USER\n});","map":{"version":3,"sources":["/home/ruslan/final_project/smart_home/client/src/redux/actions/user.action.js"],"names":["DELETE_USER","SET_USER","authEndPoints","setUser","user","type","payload","signUp","history","dispatch","response","fetch","method","headers","credentials","body","JSON","stringify","status","json","console","log","signIn","from","replace","signOut","deleteUser","checkAuth"],"mappings":"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","sourcesContent":["import { DELETE_USER, SET_USER } from \"../types/userTypes\";\nimport * as authEndPoints from \"../../config/authEndPoints\";\n\n// export const getUserFromServer = (id) => async (dispatch) => {\n// \tconst response = await fetch(authEndPoints.getUser(id), { credentials: \"include\" });\n// \tif (response.status === 200) {\n// \t\tconst currentUser = await response.json();\n// \t\tdispatch(setUser(currentUser));\n// \t}\n// };\n\nexport const setUser = (user) => ({\n\ttype: SET_USER,\n\tpayload: user,\n});\n\nexport const signUp = (payload, history) => async (dispatch) => {\n\tconst response = await fetch(authEndPoints.signUp(), {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tcredentials: \"include\",\n\t\tbody: JSON.stringify(payload),\n\t});\n\tif (response.status === 200) {\n\t\tconst user = await response.json();\n\t\tconsole.log(user);\n\t\tdispatch(setUser(user));\n\t\t// history.replace(\"/\");\n\t} else {\n\t\t// history.replace(\"/signup\");\n\t}\n};\n\nexport const signIn = (payload, history, from) => async (dispatch) => {\n\tconst response = await fetch(authEndPoints.signIn(), {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tcredentials: \"include\",\n\t\tbody: JSON.stringify(payload),\n\t});\n\n\tif (response.status === 200) {\n\t\tconst user = await response.json();\n\t\tconsole.log(user);\n\t\tdispatch(setUser(user));\n\t\thistory.replace(from);\n\t} else {\n\t\thistory.replace(\"/signin\");\n\t}\n};\n\nexport const signOut = () => async (dispatch) => {\n\tconsole.log(\"out\");\n\tconst response = await fetch(authEndPoints.signOut(), {\n\t\tcredentials: \"include\",\n\t});\n\tif (response.status === 200) {\n\t\tdispatch(deleteUser());\n\t}\n};\n\nexport const checkAuth = () => async (dispatch) => {\n\tconst response = await fetch(authEndPoints.checkAuth(), {\n\t\tcredentials: \"include\",\n\t});\n\tif (response.status === 200) {\n\t\tconst user = await response.json();\n\t\tdispatch(setUser(user));\n\t}\n};\n\nexport const deleteUser = () => ({\n\ttype: DELETE_USER,\n});\n"]},"metadata":{},"sourceType":"module"}