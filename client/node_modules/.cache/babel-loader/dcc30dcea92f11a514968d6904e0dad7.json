{"ast":null,"code":"import { DELETE_USER, SET_USER } from \"../types/userTypes\";\nimport * as authEndPoints from \"../../config/authEndPoints\";\nexport const getUserFromServer = id => async dispatch => {\n  const response = await fetch(authEndPoints.getUser(id), {\n    credentials: \"include\"\n  });\n\n  if (response.status === 200) {\n    const currentUser = await response.json();\n    dispatch(setUser(currentUser));\n  }\n};\nexport const setUser = user => ({\n  type: SET_USER,\n  payload: user\n});\nexport const signUp = (payload, history) => async dispatch => {\n  const response = await fetch(authEndPoints.signUp(), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\",\n    body: JSON.stringify(payload)\n  });\n\n  if (response.status === 200) {\n    const user = await response.json();\n    dispatch(setUser(user));\n    history.replace(\"/\");\n  } else {\n    history.replace(\"/signup\");\n  }\n};\nexport const signIn = (payload, history, from) => async dispatch => {\n  const response = await fetch(authEndPoints.signIn(), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\",\n    body: JSON.stringify(payload)\n  });\n\n  if (response.status === 200) {\n    const user = await response.json();\n    console.log(user);\n    dispatch(setUser(user));\n    history.replace(from);\n  } else {\n    history.replace(\"/signin\");\n  }\n};\nexport const signOut = () => async dispatch => {\n  console.log(\"out\");\n  const response = await fetch(authEndPoints.signOut(), {\n    credentials: \"include\"\n  });\n\n  if (response.status === 200) {\n    dispatch(deleteUser());\n  }\n};\nexport const checkAuth = () => async dispatch => {\n  const response = await fetch(authEndPoints.checkAuth(), {\n    credentials: \"include\"\n  });\n\n  if (response.status === 200) {\n    const user = await response.json();\n    dispatch(setUser(user));\n  }\n};\nexport const editUser = (user, history) => async (dispatch, getState) => {\n  const {\n    user: {\n      _id: userId\n    }\n  } = getState();\n  const response = await fetch(authEndPoints.editUser(userId), {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\",\n    body: JSON.stringify(user)\n  });\n\n  if (response.status === 200) {\n    const user = await response.json();\n    dispatch(setUser(user));\n    history.replace(`/users/${user._id}`);\n  } else {\n    history.replace(\"/\");\n  }\n};\nexport const deleteUser = () => ({\n  type: DELETE_USER\n});","map":{"version":3,"sources":["/home/ruslan/final_project/smart_home/client/src/redux/actions/user.action.js"],"names":["DELETE_USER","SET_USER","authEndPoints","getUserFromServer","id","dispatch","response","fetch","getUser","credentials","status","currentUser","json","setUser","user","type","payload","signUp","history","method","headers","body","JSON","stringify","replace","signIn","from","console","log","signOut","deleteUser","checkAuth","editUser","getState","_id","userId"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,oBAAtC;AACA,OAAO,KAAKC,aAAZ,MAA+B,4BAA/B;AAGA,OAAO,MAAMC,iBAAiB,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AAE5D,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,aAAa,CAACM,OAAd,CAAsBJ,EAAtB,CAAD,EAA4B;AAAEK,IAAAA,WAAW,EAAE;AAAf,GAA5B,CAA5B;;AACA,MAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC5B,UAAMC,WAAW,GAAG,MAAML,QAAQ,CAACM,IAAT,EAA1B;AACAP,IAAAA,QAAQ,CAACQ,OAAO,CAACF,WAAD,CAAR,CAAR;AACA;AAED,CARM;AAUP,OAAO,MAAME,OAAO,GAAIC,IAAD,KAAW;AACjCC,EAAAA,IAAI,EAAEd,QAD2B;AAEjCe,EAAAA,OAAO,EAAEF;AAFwB,CAAX,CAAhB;AAKP,OAAO,MAAMG,MAAM,GAAG,CAACD,OAAD,EAAUE,OAAV,KAAsB,MAAOb,QAAP,IAAoB;AAE/D,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,aAAa,CAACe,MAAd,EAAD,EAAyB;AACpDE,IAAAA,MAAM,EAAE,MAD4C;AAEpDC,IAAAA,OAAO,EAAE;AACR,sBAAgB;AADR,KAF2C;AAKpDX,IAAAA,WAAW,EAAE,SALuC;AAMpDY,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AAN8C,GAAzB,CAA5B;;AAQA,MAAIV,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC5B,UAAMI,IAAI,GAAG,MAAMR,QAAQ,CAACM,IAAT,EAAnB;AACAP,IAAAA,QAAQ,CAACQ,OAAO,CAACC,IAAD,CAAR,CAAR;AACAI,IAAAA,OAAO,CAACM,OAAR,CAAgB,GAAhB;AACA,GAJD,MAIO;AACNN,IAAAA,OAAO,CAACM,OAAR,CAAgB,SAAhB;AACA;AAED,CAlBM;AAoBP,OAAO,MAAMC,MAAM,GAAG,CAACT,OAAD,EAAUE,OAAV,EAAmBQ,IAAnB,KAA4B,MAAOrB,QAAP,IAAoB;AAErE,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,aAAa,CAACuB,MAAd,EAAD,EAAyB;AACpDN,IAAAA,MAAM,EAAE,MAD4C;AAEpDC,IAAAA,OAAO,EAAE;AACR,sBAAgB;AADR,KAF2C;AAKpDX,IAAAA,WAAW,EAAE,SALuC;AAMpDY,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AAN8C,GAAzB,CAA5B;;AAQA,MAAIV,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC5B,UAAMI,IAAI,GAAG,MAAMR,QAAQ,CAACM,IAAT,EAAnB;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACAT,IAAAA,QAAQ,CAACQ,OAAO,CAACC,IAAD,CAAR,CAAR;AACAI,IAAAA,OAAO,CAACM,OAAR,CAAgBE,IAAhB;AACA,GALD,MAKO;AACNR,IAAAA,OAAO,CAACM,OAAR,CAAgB,SAAhB;AACA;AAED,CAnBM;AAqBP,OAAO,MAAMK,OAAO,GAAG,MAAM,MAAOxB,QAAP,IAAoB;AAChDsB,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,QAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAACL,aAAa,CAAC2B,OAAd,EAAD,EAA0B;AACrDpB,IAAAA,WAAW,EAAE;AADwC,GAA1B,CAA5B;;AAGA,MAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC5BL,IAAAA,QAAQ,CAACyB,UAAU,EAAX,CAAR;AAEA;AACD,CATM;AAWP,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAO1B,QAAP,IAAoB;AAClD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,aAAa,CAAC6B,SAAd,EAAD,EAA4B;AACvDtB,IAAAA,WAAW,EAAE;AAD0C,GAA5B,CAA5B;;AAGA,MAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC5B,UAAMI,IAAI,GAAG,MAAMR,QAAQ,CAACM,IAAT,EAAnB;AACAP,IAAAA,QAAQ,CAACQ,OAAO,CAACC,IAAD,CAAR,CAAR;AACA;AACD,CARM;AAUP,OAAO,MAAMkB,QAAQ,GAAG,CAAClB,IAAD,EAAOI,OAAP,KAAmB,OAAOb,QAAP,EAAiB4B,QAAjB,KAA8B;AACxE,QAAM;AACLnB,IAAAA,IAAI,EAAE;AAAEoB,MAAAA,GAAG,EAAEC;AAAP;AADD,MAEFF,QAAQ,EAFZ;AAIA,QAAM3B,QAAQ,GAAG,MAAMC,KAAK,CAACL,aAAa,CAAC8B,QAAd,CAAuBG,MAAvB,CAAD,EAAiC;AAC5DhB,IAAAA,MAAM,EAAE,OADoD;AAE5DC,IAAAA,OAAO,EAAE;AACR,sBAAgB;AADR,KAFmD;AAK5DX,IAAAA,WAAW,EAAE,SAL+C;AAM5DY,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AANsD,GAAjC,CAA5B;;AAQA,MAAIR,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC5B,UAAMI,IAAI,GAAG,MAAMR,QAAQ,CAACM,IAAT,EAAnB;AACAP,IAAAA,QAAQ,CAACQ,OAAO,CAACC,IAAD,CAAR,CAAR;AACAI,IAAAA,OAAO,CAACM,OAAR,CAAiB,UAASV,IAAI,CAACoB,GAAI,EAAnC;AACA,GAJD,MAIO;AACNhB,IAAAA,OAAO,CAACM,OAAR,CAAgB,GAAhB;AACA;AAED,CArBM;AAuBP,OAAO,MAAMM,UAAU,GAAG,OAAO;AAChCf,EAAAA,IAAI,EAAEf;AAD0B,CAAP,CAAnB","sourcesContent":["import { DELETE_USER, SET_USER } from \"../types/userTypes\";\nimport * as authEndPoints from \"../../config/authEndPoints\";\n\n\nexport const getUserFromServer = (id) => async (dispatch) => {\n\t\n\tconst response = await fetch(authEndPoints.getUser(id), { credentials: \"include\" });\n\tif (response.status === 200) {\n\t\tconst currentUser = await response.json();\n\t\tdispatch(setUser(currentUser));\n\t}\n\t\n};\n\nexport const setUser = (user) => ({\n\ttype: SET_USER,\n\tpayload: user,\n});\n\nexport const signUp = (payload, history) => async (dispatch) => {\n\t\n\tconst response = await fetch(authEndPoints.signUp(), {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tcredentials: \"include\",\n\t\tbody: JSON.stringify(payload),\n\t});\n\tif (response.status === 200) {\n\t\tconst user = await response.json();\n\t\tdispatch(setUser(user));\n\t\thistory.replace(\"/\");\n\t} else {\n\t\thistory.replace(\"/signup\");\n\t}\n\t\n};\n\nexport const signIn = (payload, history, from) => async (dispatch) => {\n\t\n\tconst response = await fetch(authEndPoints.signIn(), {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tcredentials: \"include\",\n\t\tbody: JSON.stringify(payload),\n\t});\n\tif (response.status === 200) {\n\t\tconst user = await response.json();\n\t\tconsole.log(user);\n\t\tdispatch(setUser(user));\n\t\thistory.replace(from);\n\t} else {\n\t\thistory.replace(\"/signin\");\n\t}\n\t\n};\n\nexport const signOut = () => async (dispatch) => {\n\tconsole.log(\"out\");\n\tconst response = await fetch(authEndPoints.signOut(), {\n\t\tcredentials: \"include\",\n\t});\n\tif (response.status === 200) {\n\t\tdispatch(deleteUser());\n\t\t\n\t}\n};\n\nexport const checkAuth = () => async (dispatch) => {\n\tconst response = await fetch(authEndPoints.checkAuth(), {\n\t\tcredentials: \"include\",\n\t});\n\tif (response.status === 200) {\n\t\tconst user = await response.json();\n\t\tdispatch(setUser(user));\n\t}\n};\n\nexport const editUser = (user, history) => async (dispatch, getState) => {\n\tconst {\n\t\tuser: { _id: userId },\n\t} = getState();\n\t\n\tconst response = await fetch(authEndPoints.editUser(userId), {\n\t\tmethod: \"PATCH\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tcredentials: \"include\",\n\t\tbody: JSON.stringify(user),\n\t});\n\tif (response.status === 200) {\n\t\tconst user = await response.json();\n\t\tdispatch(setUser(user));\n\t\thistory.replace(`/users/${user._id}`);\n\t} else {\n\t\thistory.replace(\"/\");\n\t}\n\t\n};\n\nexport const deleteUser = () => ({\n\ttype: DELETE_USER,\n});\n"]},"metadata":{},"sourceType":"module"}